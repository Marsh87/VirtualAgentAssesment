@model VirtualAgentAssessment.Models.EditAccountViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account Details</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.account_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.account_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.account_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.DisplayNameFor(model => model.outstanding_balance)
            <div class="col-md-10">
                @Html.DisplayFor(model => model.outstanding_balance, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.HiddenFor(m => m.code)
                @Html.HiddenFor(m => m.person_code)
                @Html.HiddenFor(m => m.outstanding_balance)
                @Html.HiddenFor(m => m.account_number)
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}
<br/>

@if (Model.IsActive)
{
    <p>
        @Html.ActionLink("Add New Transaction", "Create", "Transaction", new { accountCode = Model.code }, null)
    </p>
}

@{
    Html.RenderPartial("~/Views/Transaction/TransactionList.cshtml", Model.Transactions);
}

<div>
    @Html.ActionLink("Back to Person", "Edit", "Person", new { code = Model.person_code }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}